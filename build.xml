<?xml version="1.0"?>
<project name="NewTujun" default="test" basedir=".">
	<!-- 定义变量 -->
	<property name="lib.dir" value="lib" />
	<property name="testoutput.dir" value="test-output" />
	<!-- 所有项目需要用到的jar包的路径，dir是路径地址，引用了property定义好的名字 -->
	<path id="run.classpath">
	<!-- adding the saxon jar to your classpath -->
		<fileset dir="${lib.dir}" includes="*.jar" />
		
	</path>
	<!-- pathelement：java类文件的路径地址 -->
	<path id="classes">
		<path refid="run.classpath" />
		<pathelement location="${basedir}/bin" />
	</path>
	<!-- taskdef：这个也不知道干嘛的，没这段东西，下面用testng标签就会报错，应该是引入testng的源文件
	classpathref：引用了path定义好的名字，主要是加载testng的jar。可以只指向testng的jar路径就可以这样写：classpath="lib/testng.jar" -->
	
	<taskdef resource="testngtasks" classpathref="run.classpath" />
	
	<!-- target：有点像java中类的感觉，可以有多个target标签，但是必须有一个标签的name必须与project的default的值一致。而target也可以依赖其他target。
	第一个是删除当前目录下的bin文件夹，bin文件夹下面是存javac编译的class文件，所以要先删除。
	第二个是新创建bin文件夹，然后通过javac执行编译java的类文件。
	mkdir：新建文件夹
	javac：编译java类文件，srcdir：是java类文件的路径，destdir：是编译后的class文件路径，其他内容可以按需要填写。
	第三个是执行testng
	outputdir：testng报告输入的路径
	classpathref：填写testng的java类文件，以及运行类文件需要jar的路径。这里是引入的是path定义好了的，
	xmlfileset：设置testng的xml，dir：testng的xml路径，includes是xml的名称。
	第四个是优化testng的报告，这个在之前的文章中有写，这里不作太多说明 -->
	
	<target name="clean">
		<delete dir="bin" />
		<delete dir="${testoutput.dir}/TestReport" />
	</target>
	<target name="compile" depends="clean">
		<mkdir dir="bin" />
		<javac srcdir="src" destdir="bin" debug="on" classpathref="run.classpath" includeAntRuntime="false" encoding="GBK" />
	</target>
	<target name="t" depends="compile">
		<testng outputdir="${testoutput.dir}" classpathref="classes">
		<xmlfileset dir="${basedir}" includes="testng.xml"/>
		</testng>
	</target>
	<target name="test" depends="t">
		<xslt in="D:\workplace\tuqiangol_test\test-output\testng-results.xml"
      		style="D:\workplace\tuqiangol_test\test-output\testng-results.xsl"
      		out="D:\workplace\tuqiangol_test\test-output\TestReport\index.html">
      		<!-- you need to specify the directory here again -->
      		<param name="testNgXslt.outputDir" expression="D:\workplace\tuqiangol_test\test-output\TestReport" />
      		<classpath refid="run.classpath" />
</xslt>
		</target>
	</project>